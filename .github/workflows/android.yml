name: Android CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  JAVA_VERSION: "17"
  JAVA_DISTRIBUTION: "temurin"

jobs:
  validate:
    name: Validate and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      actions: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create keystore.properties
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY_DEBUG }}
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=$OPENWEATHER_API_KEY" > keystore.properties
          echo "OPENWEATHER_API_KEY_RELEASE=$OPENWEATHER_API_KEY" >> keystore.properties

      - name: Run tests
        run: ./gradlew test

      - name: Run lint
        run: ./gradlew lint

      - name: Create reports directory
        run: mkdir -p app/build/reports

      - name: Upload lint results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-results
          path: |
            app/build/reports/lint-results-debug.html
            app/build/reports/lint-results.html
          if-no-files-found: warn

  build_debug:
    name: Build Debug APK
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create keystore.properties
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY_DEBUG }}
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=$OPENWEATHER_API_KEY" > keystore.properties
          echo "OPENWEATHER_API_KEY_RELEASE=$OPENWEATHER_API_KEY" >> keystore.properties

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error

  build_release:
    name: Build Release APK
    needs: validate
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create keystore.properties
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY_RELEASE }}
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=$OPENWEATHER_API_KEY" > keystore.properties
          echo "OPENWEATHER_API_KEY_RELEASE=$OPENWEATHER_API_KEY" >> keystore.properties

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
          if-no-files-found: error

  deploy:
    name: Create Release
    needs: build_release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Download Release APK
        uses: actions/download-artifact@v3
        with:
          name: app-release
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: app-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
