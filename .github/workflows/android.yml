name: Android CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  JAVA_VERSION: "17"
  JAVA_DISTRIBUTION: "temurin"
  API_LEVEL: "31"
  TARGET: "google_apis"
  ARCH: "x86_64"
  CMD_TIMEOUT: "600"

jobs:
  lint:
    name: Run Lint Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run ktlint check
        run: ./gradlew ktlintCheck

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create local.properties
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=${{ secrets.OPENWEATHER_API_KEY_DEBUG }}" > local.properties
          echo "OPENWEATHER_API_KEY_RELEASE=${{ secrets.OPENWEATHER_API_KEY_RELEASE }}" >> local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew test -x :app:testDebugUnitTest -x :app:testReleaseUnitTest

  ui-test:
    name: Run UI Tests
    runs-on: macos-13
    needs: lint
    timeout-minutes: 60
    env:
      ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 60
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create local.properties
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=${{ secrets.OPENWEATHER_API_KEY_DEBUG }}" > local.properties
          echo "OPENWEATHER_API_KEY_RELEASE=${{ secrets.OPENWEATHER_API_KEY_RELEASE }}" >> local.properties

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK Components
        run: |
          echo "y" | sdkmanager --install \
            "build-tools;34.0.0" \
            "platform-tools" \
            "platforms;android-31" \
            "emulator" \
            "system-images;android-31;google_apis;x86_64"

      - name: Create AVD and modify config
        run: |
          echo "no" | avdmanager create avd \
            --force \
            --name "test_device" \
            --package "system-images;android-31;google_apis;x86_64" \
            --device "pixel_6"

          echo "hw.cpu.ncore=2" >> ~/.android/avd/test_device.avd/config.ini
          echo "hw.ramSize=2048" >> ~/.android/avd/test_device.avd/config.ini
          echo "hw.lcd.density=440" >> ~/.android/avd/test_device.avd/config.ini
          echo "disk.dataPartition.size=2048M" >> ~/.android/avd/test_device.avd/config.ini
          echo "hw.keyboard=yes" >> ~/.android/avd/test_device.avd/config.ini

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run UI Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          target: ${{ env.TARGET }}
          arch: ${{ env.ARCH }}
          avd-name: test_device
          force-avd-creation: false
          cores: 2
          ram-size: 2048M
          emulator-boot-timeout: 600
          emulator-options: >-
            -no-snapshot-save
            -no-window
            -gpu swiftshader_indirect
            -noaudio
            -no-boot-anim
            -camera-back none
            -no-snapshot
            -memory 2048
          disable-animations: true
          disable-spellchecker: true
          script: |
            # Wait for emulator to start
            adb wait-for-device
            adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done'

            # Verify boot completed
            bootanim=""
            failCounter=0
            until [[ "$bootanim" =~ "stopped" ]] || [[ $failCounter -gt 10 ]]; do
              bootanim=$(adb -e shell getprop init.svc.bootanim 2>&1 &)
              echo "Waiting for boot animation to complete... (attempt $failCounter)"
              sleep 10
              ((failCounter++))
            done

            # Start logcat capture
            adb logcat > emulator.log &

            # Disable animations
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0

            # Run tests with retry mechanism
            for i in 1 2 3; do
              if ./gradlew connectedCheck; then
                echo "Tests completed successfully"
                break
              else
                echo "Attempt $i failed, retrying..."
                sleep 30
              fi
            done

      - name: Upload UI Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: |
            app/build/reports/androidTests/
            emulator.log

  build:
    name: Build Debug APK
    runs-on: ubuntu-latest
    needs: [test, ui-test]
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create local.properties
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=${{ secrets.OPENWEATHER_API_KEY_DEBUG }}" > local.properties
          echo "OPENWEATHER_API_KEY_RELEASE=${{ secrets.OPENWEATHER_API_KEY_RELEASE }}" >> local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Build Release Bundle
    runs-on: ubuntu-latest
    needs: [test, ui-test]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create local.properties
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=${{ secrets.OPENWEATHER_API_KEY_DEBUG }}" > local.properties
          echo "OPENWEATHER_API_KEY_RELEASE=${{ secrets.OPENWEATHER_API_KEY_RELEASE }}" >> local.properties

      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > bestbikeday.keystore

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release Bundle
        run: ./gradlew bundleRelease

      - name: Upload Release Bundle
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/bundle/release/app-release.aab
