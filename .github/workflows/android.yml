name: Android CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  JAVA_VERSION: "17"
  JAVA_DISTRIBUTION: "temurin"
  API_LEVEL: "31"
  TARGET: "google_apis"
  ARCH: "x86_64"
  CMD_TIMEOUT: "600"

jobs:
  lint:
    name: Run Lint Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run ktlint check
        run: ./gradlew ktlintCheck

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create local.properties
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=${{ secrets.OPENWEATHER_API_KEY_DEBUG }}" > local.properties
          echo "OPENWEATHER_API_KEY_RELEASE=${{ secrets.OPENWEATHER_API_KEY_RELEASE }}" >> local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew test -x :app:testDebugUnitTest -x :app:testReleaseUnitTest

  ui-test:
    name: Run UI Tests
    runs-on: macos-13
    needs: lint
    timeout-minutes: 60
    env:
      ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 120
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create local.properties
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=${{ secrets.OPENWEATHER_API_KEY_DEBUG }}" > local.properties
          echo "OPENWEATHER_API_KEY_RELEASE=${{ secrets.OPENWEATHER_API_KEY_RELEASE }}" >> local.properties

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK Components
        run: |
          sdkmanager --install \
            "build-tools;34.0.0" \
            "platform-tools" \
            "platforms;android-31" \
            "emulator" \
            "system-images;android-31;google_apis;x86_64"

      - name: Accept Android SDK Licenses
        run: yes | sdkmanager --licenses || true

      - name: Create AVD and modify config
        run: |
          # Create base AVD
          echo "no" | avdmanager create avd \
            --force \
            --name "test_device" \
            --package "system-images;android-31;google_apis;x86_64" \
            --device "pixel_6"

          # Remove existing config to prevent conflicts
          rm -f ~/.android/avd/test_device.avd/config.ini
          touch ~/.android/avd/test_device.avd/config.ini

          # Write all config at once to prevent race conditions
          {
            echo "avd.ini.encoding=UTF-8"
            echo "hw.cpu.ncore=1"
            echo "hw.ramSize=2048"
            echo "hw.lcd.density=440"
            echo "disk.dataPartition.size=2048M"
            echo "hw.cpu.arch=x86_64"
            
            # Hardware acceleration settings
            echo "hw.keyboard=yes"
            echo "hw.gpu.enabled=yes"
            echo "hw.gpu.mode=swiftshader_indirect"
            echo "hw.accelerometer=no"
            echo "hw.videoInput=no"
            echo "hw.audioInput=no"
            echo "hw.audioOutput=no"
            echo "hw.camera.back=none"
            echo "hw.camera.front=none"
            
            # CPU configuration
            echo "hw.cpu.model=qemu64"
            echo "hw.cpu.ncore.max=1"
            
            # Performance settings
            echo "hw.lcd.vsync=false"
            echo "debug.hwui.renderer=skiagl"
            
            # Additional optimizations
            echo "hw.useext4=yes"
            echo "disk.cachePartition=yes"
            echo "disk.cachePartition.size=66MB"
            echo "runtime.network.latency=none"
            echo "runtime.network.speed=full"
          } > ~/.android/avd/test_device.avd/config.ini

          # Verify config
          echo "AVD Configuration:"
          cat ~/.android/avd/test_device.avd/config.ini

      - name: Configure ADB
        run: |
          # Kill any existing ADB server
          adb kill-server || true
          sleep 5

          # Start ADB server with specific port
          adb -P 5037 start-server
          sleep 2

          # Verify ADB is running
          adb devices

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run UI Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          target: ${{ env.TARGET }}
          arch: ${{ env.ARCH }}
          avd-name: test_device
          force-avd-creation: false
          emulator-boot-timeout: 1200
          disable-animations: true
          disable-spellchecker: true
          emulator-options: >-
            -no-snapshot-save
            -no-window
            -gpu swiftshader_indirect
            -noaudio
            -no-boot-anim
            -camera-back none
            -no-snapshot
            -memory 2048
            -cores 1
            -accel off
            -netfast
            -no-metrics
            -wipe-data
            -partition-size 4096
          script: |
            # Wait for emulator to start
            adb wait-for-device
            sleep 30

            # Print initial device state
            echo "Initial device state:"
            adb devices -l

            # Run tests with retry mechanism
            max_retries=3
            for ((i=1; i<=max_retries; i++)); do
              echo "Test attempt $i of $max_retries"
              
              # Check device state before running tests
              adb devices -l
              adb shell getprop sys.boot_completed
              
              if ./gradlew connectedCheck --debug --stacktrace --info; then
                echo "Tests completed successfully"
                break
              else
                echo "Attempt $i failed"
                if [[ $i -lt $max_retries ]]; then
                  echo "Waiting before retry..."
                  sleep 30
                fi
              fi
            done

            # Ensure crashpad_handler is terminated
            echo "Terminating crashpad_handler processes..."
            pkill -SIGTERM crashpad_handler || true
            sleep 5
            pkill -SIGKILL crashpad_handler || true

      - name: Upload UI Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: |
            app/build/reports/androidTests/
            emulator.log

  build:
    name: Build Debug APK
    runs-on: ubuntu-latest
    needs: [test, ui-test]
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create local.properties
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=${{ secrets.OPENWEATHER_API_KEY_DEBUG }}" > local.properties
          echo "OPENWEATHER_API_KEY_RELEASE=${{ secrets.OPENWEATHER_API_KEY_RELEASE }}" >> local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Build Release Bundle
    runs-on: ubuntu-latest
    needs: [test, ui-test]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Create local.properties
        run: |
          echo "OPENWEATHER_API_KEY_DEBUG=${{ secrets.OPENWEATHER_API_KEY_DEBUG }}" > local.properties
          echo "OPENWEATHER_API_KEY_RELEASE=${{ secrets.OPENWEATHER_API_KEY_RELEASE }}" >> local.properties

      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > bestbikeday.keystore

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release Bundle
        run: ./gradlew bundleRelease

      - name: Upload Release Bundle
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/bundle/release/app-release.aab
